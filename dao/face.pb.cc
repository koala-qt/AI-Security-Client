// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: face.proto

#include "face.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_face_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_face_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Box;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_face_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FaceInfoPT;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_face_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OneDayEventCount;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_face_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PieCharData;
}  // namespace protobuf_face_2eproto
namespace kf {
class BoxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Box>
      _instance;
} _Box_default_instance_;
class PersonBoxsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PersonBoxs>
      _instance;
} _PersonBoxs_default_instance_;
class FaceInfoPTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaceInfoPT>
      _instance;
} _FaceInfoPT_default_instance_;
class FaceStatisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaceStatis>
      _instance;
} _FaceStatis_default_instance_;
class TrackedFaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrackedFace>
      _instance;
} _TrackedFace_default_instance_;
class BlackListFaceAlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlackListFaceAlarm>
      _instance;
} _BlackListFaceAlarm_default_instance_;
class IntruderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Intruder>
      _instance;
} _Intruder_default_instance_;
class ABDoorAlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ABDoorAlarm>
      _instance;
} _ABDoorAlarm_default_instance_;
class StopAlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopAlarm>
      _instance;
} _StopAlarm_default_instance_;
class ClimbAlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClimbAlarm>
      _instance;
} _ClimbAlarm_default_instance_;
class LingerAlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LingerAlarm>
      _instance;
} _LingerAlarm_default_instance_;
class GatherAlarmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GatherAlarm>
      _instance;
} _GatherAlarm_default_instance_;
class TodayTotalEventCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TodayTotalEventCount>
      _instance;
} _TodayTotalEventCount_default_instance_;
class OneDayEventCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OneDayEventCount>
      _instance;
} _OneDayEventCount_default_instance_;
class EventSpiderGiagramDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventSpiderGiagram>
      _instance;
} _EventSpiderGiagram_default_instance_;
class TodayAlarmEventCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TodayAlarmEventCount>
      _instance;
} _TodayAlarmEventCount_default_instance_;
class PieCharDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PieCharData>
      _instance;
} _PieCharData_default_instance_;
class PieChartDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PieChart>
      _instance;
} _PieChart_default_instance_;
class TodayFaceCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TodayFaceCount>
      _instance;
} _TodayFaceCount_default_instance_;
class SnapAreaGiagramDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapAreaGiagram>
      _instance;
} _SnapAreaGiagram_default_instance_;
class TreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tree>
      _instance;
} _Tree_default_instance_;
}  // namespace kf
namespace protobuf_face_2eproto {
static void InitDefaultsBox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_Box_default_instance_;
    new (ptr) ::kf::Box();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::Box::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Box =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBox}, {}};

static void InitDefaultsPersonBoxs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_PersonBoxs_default_instance_;
    new (ptr) ::kf::PersonBoxs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::PersonBoxs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PersonBoxs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPersonBoxs}, {
      &protobuf_face_2eproto::scc_info_Box.base,}};

static void InitDefaultsFaceInfoPT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_FaceInfoPT_default_instance_;
    new (ptr) ::kf::FaceInfoPT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::FaceInfoPT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FaceInfoPT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFaceInfoPT}, {}};

static void InitDefaultsFaceStatis() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_FaceStatis_default_instance_;
    new (ptr) ::kf::FaceStatis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::FaceStatis::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FaceStatis =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFaceStatis}, {
      &protobuf_face_2eproto::scc_info_FaceInfoPT.base,}};

static void InitDefaultsTrackedFace() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_TrackedFace_default_instance_;
    new (ptr) ::kf::TrackedFace();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::TrackedFace::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TrackedFace =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTrackedFace}, {
      &protobuf_face_2eproto::scc_info_FaceInfoPT.base,}};

static void InitDefaultsBlackListFaceAlarm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_BlackListFaceAlarm_default_instance_;
    new (ptr) ::kf::BlackListFaceAlarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::BlackListFaceAlarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BlackListFaceAlarm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBlackListFaceAlarm}, {}};

static void InitDefaultsIntruder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_Intruder_default_instance_;
    new (ptr) ::kf::Intruder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::Intruder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Intruder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIntruder}, {}};

static void InitDefaultsABDoorAlarm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_ABDoorAlarm_default_instance_;
    new (ptr) ::kf::ABDoorAlarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::ABDoorAlarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ABDoorAlarm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsABDoorAlarm}, {}};

static void InitDefaultsStopAlarm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_StopAlarm_default_instance_;
    new (ptr) ::kf::StopAlarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::StopAlarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StopAlarm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStopAlarm}, {}};

static void InitDefaultsClimbAlarm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_ClimbAlarm_default_instance_;
    new (ptr) ::kf::ClimbAlarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::ClimbAlarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClimbAlarm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClimbAlarm}, {}};

static void InitDefaultsLingerAlarm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_LingerAlarm_default_instance_;
    new (ptr) ::kf::LingerAlarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::LingerAlarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LingerAlarm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLingerAlarm}, {}};

static void InitDefaultsGatherAlarm() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_GatherAlarm_default_instance_;
    new (ptr) ::kf::GatherAlarm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::GatherAlarm::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GatherAlarm =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGatherAlarm}, {}};

static void InitDefaultsTodayTotalEventCount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_TodayTotalEventCount_default_instance_;
    new (ptr) ::kf::TodayTotalEventCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::TodayTotalEventCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TodayTotalEventCount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTodayTotalEventCount}, {}};

static void InitDefaultsOneDayEventCount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_OneDayEventCount_default_instance_;
    new (ptr) ::kf::OneDayEventCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::OneDayEventCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OneDayEventCount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOneDayEventCount}, {}};

static void InitDefaultsEventSpiderGiagram() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_EventSpiderGiagram_default_instance_;
    new (ptr) ::kf::EventSpiderGiagram();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::EventSpiderGiagram::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EventSpiderGiagram =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEventSpiderGiagram}, {
      &protobuf_face_2eproto::scc_info_OneDayEventCount.base,}};

static void InitDefaultsTodayAlarmEventCount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_TodayAlarmEventCount_default_instance_;
    new (ptr) ::kf::TodayAlarmEventCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::TodayAlarmEventCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TodayAlarmEventCount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTodayAlarmEventCount}, {}};

static void InitDefaultsPieCharData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_PieCharData_default_instance_;
    new (ptr) ::kf::PieCharData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::PieCharData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PieCharData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPieCharData}, {}};

static void InitDefaultsPieChart() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_PieChart_default_instance_;
    new (ptr) ::kf::PieChart();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::PieChart::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PieChart =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPieChart}, {
      &protobuf_face_2eproto::scc_info_PieCharData.base,}};

static void InitDefaultsTodayFaceCount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_TodayFaceCount_default_instance_;
    new (ptr) ::kf::TodayFaceCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::TodayFaceCount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TodayFaceCount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTodayFaceCount}, {}};

static void InitDefaultsSnapAreaGiagram() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_SnapAreaGiagram_default_instance_;
    new (ptr) ::kf::SnapAreaGiagram();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::SnapAreaGiagram::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SnapAreaGiagram =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSnapAreaGiagram}, {}};

static void InitDefaultsTree() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kf::_Tree_default_instance_;
    new (ptr) ::kf::Tree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kf::Tree::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Tree =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTree}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Box.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PersonBoxs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FaceInfoPT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FaceStatis.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TrackedFace.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlackListFaceAlarm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Intruder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ABDoorAlarm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StopAlarm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClimbAlarm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LingerAlarm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GatherAlarm.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TodayTotalEventCount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OneDayEventCount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventSpiderGiagram.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TodayAlarmEventCount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PieCharData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PieChart.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TodayFaceCount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SnapAreaGiagram.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tree.base);
}

::google::protobuf::Metadata file_level_metadata[21];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Box, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Box, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Box, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Box, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Box, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Box, height_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PersonBoxs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PersonBoxs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PersonBoxs, camera_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PersonBoxs, boxes_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceInfoPT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceInfoPT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceInfoPT, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceInfoPT, camera_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceInfoPT, camera_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceInfoPT, img_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceInfoPT, timestamp_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceStatis, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceStatis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceStatis, before_face_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceStatis, after_face_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::FaceStatis, time_cost_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TrackedFace, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TrackedFace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TrackedFace, face_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TrackedFace, tracked_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::BlackListFaceAlarm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::BlackListFaceAlarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::BlackListFaceAlarm, oid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::BlackListFaceAlarm, camera_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::BlackListFaceAlarm, camera_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::BlackListFaceAlarm, face_img_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::BlackListFaceAlarm, thumbnail_scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::BlackListFaceAlarm, timestamp_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Intruder, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Intruder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Intruder, oid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Intruder, camera_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Intruder, camera_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Intruder, pseron_imgs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Intruder, thumbnail_scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Intruder, timestamp_),
  0,
  1,
  2,
  ~0u,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ABDoorAlarm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ABDoorAlarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ABDoorAlarm, oid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ABDoorAlarm, camera_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ABDoorAlarm, camera_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ABDoorAlarm, pseron_img_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ABDoorAlarm, thumbnail_scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ABDoorAlarm, timestamp_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::StopAlarm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::StopAlarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::StopAlarm, camera_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::StopAlarm, camera_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::StopAlarm, person_imgs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::StopAlarm, thumbnail_scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::StopAlarm, timestamp_),
  0,
  1,
  ~0u,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ClimbAlarm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ClimbAlarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ClimbAlarm, camera_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ClimbAlarm, camera_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ClimbAlarm, person_imgs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ClimbAlarm, thumbnail_scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::ClimbAlarm, timestamp_),
  0,
  1,
  ~0u,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::LingerAlarm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::LingerAlarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::LingerAlarm, camera_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::LingerAlarm, camera_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::LingerAlarm, person_imgs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::LingerAlarm, thumbnail_scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::LingerAlarm, timestamp_),
  0,
  1,
  ~0u,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::GatherAlarm, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::GatherAlarm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::GatherAlarm, camera_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::GatherAlarm, camera_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::GatherAlarm, person_img_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::GatherAlarm, thumbnail_scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::GatherAlarm, timestamp_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayTotalEventCount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayTotalEventCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayTotalEventCount, total_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayTotalEventCount, blacklist_count_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::OneDayEventCount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::OneDayEventCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::OneDayEventCount, event_count_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::EventSpiderGiagram, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::EventSpiderGiagram, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::EventSpiderGiagram, someday_count_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayAlarmEventCount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayAlarmEventCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayAlarmEventCount, ab_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayAlarmEventCount, intrude_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayAlarmEventCount, blacklist_count_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PieCharData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PieCharData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PieCharData, camera_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PieCharData, cost_time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PieChart, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PieChart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::PieChart, pie_chart_data_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayFaceCount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayFaceCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayFaceCount, snap_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayFaceCount, blacklist_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayFaceCount, served_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::TodayFaceCount, blacklist_alarm_count_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::SnapAreaGiagram, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::SnapAreaGiagram, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::SnapAreaGiagram, snap_count_point_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Tree, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Tree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Tree, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Tree, oid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kf::Tree, msg_),
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::kf::Box)},
  { 13, 20, sizeof(::kf::PersonBoxs)},
  { 22, 32, sizeof(::kf::FaceInfoPT)},
  { 37, 45, sizeof(::kf::FaceStatis)},
  { 48, 55, sizeof(::kf::TrackedFace)},
  { 57, 68, sizeof(::kf::BlackListFaceAlarm)},
  { 74, 85, sizeof(::kf::Intruder)},
  { 91, 102, sizeof(::kf::ABDoorAlarm)},
  { 108, 118, sizeof(::kf::StopAlarm)},
  { 123, 133, sizeof(::kf::ClimbAlarm)},
  { 138, 148, sizeof(::kf::LingerAlarm)},
  { 153, 163, sizeof(::kf::GatherAlarm)},
  { 168, 175, sizeof(::kf::TodayTotalEventCount)},
  { 177, 183, sizeof(::kf::OneDayEventCount)},
  { 184, 190, sizeof(::kf::EventSpiderGiagram)},
  { 191, 199, sizeof(::kf::TodayAlarmEventCount)},
  { 202, 209, sizeof(::kf::PieCharData)},
  { 211, 217, sizeof(::kf::PieChart)},
  { 218, 227, sizeof(::kf::TodayFaceCount)},
  { 231, 237, sizeof(::kf::SnapAreaGiagram)},
  { 238, 246, sizeof(::kf::Tree)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_Box_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_PersonBoxs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_FaceInfoPT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_FaceStatis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_TrackedFace_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_BlackListFaceAlarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_Intruder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_ABDoorAlarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_StopAlarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_ClimbAlarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_LingerAlarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_GatherAlarm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_TodayTotalEventCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_OneDayEventCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_EventSpiderGiagram_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_TodayAlarmEventCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_PieCharData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_PieChart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_TodayFaceCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_SnapAreaGiagram_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kf::_Tree_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "face.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nface.proto\022\002kf\":\n\003Box\022\t\n\001x\030\001 \002(\005\022\t\n\001y\030"
      "\002 \002(\005\022\r\n\005width\030\003 \002(\005\022\016\n\006height\030\004 \002(\005\"7\n\n"
      "PersonBoxs\022\021\n\tcamera_id\030\001 \002(\t\022\026\n\005boxes\030\002"
      " \003(\0132\007.kf.Box\"d\n\nFaceInfoPT\022\n\n\002id\030\001 \002(\t\022"
      "\021\n\tcamera_id\030\002 \002(\t\022\022\n\ncamera_pos\030\003 \002(\t\022\020"
      "\n\010img_data\030\004 \002(\014\022\021\n\ttimestamp\030\005 \002(\003\"h\n\nF"
      "aceStatis\022#\n\013before_face\030\001 \002(\0132\016.kf.Face"
      "InfoPT\022\"\n\nafter_face\030\002 \002(\0132\016.kf.FaceInfo"
      "PT\022\021\n\ttime_cost\030\003 \002(\005\"D\n\013TrackedFace\022!\n\t"
      "face_info\030\001 \002(\0132\016.kf.FaceInfoPT\022\022\n\ntrack"
      "ed_id\030\002 \002(\t\"\206\001\n\022BlackListFaceAlarm\022\013\n\003oi"
      "d\030\001 \002(\t\022\021\n\tcamera_id\030\002 \002(\t\022\022\n\ncamera_pos"
      "\030\003 \002(\t\022\020\n\010face_img\030\004 \002(\014\022\027\n\017thumbnail_sc"
      "ene\030\005 \002(\014\022\021\n\ttimestamp\030\006 \002(\003\"\177\n\010Intruder"
      "\022\013\n\003oid\030\001 \002(\t\022\021\n\tcamera_id\030\002 \002(\t\022\022\n\ncame"
      "ra_pos\030\003 \002(\t\022\023\n\013pseron_imgs\030\004 \003(\014\022\027\n\017thu"
      "mbnail_scene\030\005 \002(\014\022\021\n\ttimestamp\030\006 \002(\003\"\201\001"
      "\n\013ABDoorAlarm\022\013\n\003oid\030\001 \002(\t\022\021\n\tcamera_id\030"
      "\002 \002(\t\022\022\n\ncamera_pos\030\003 \002(\t\022\022\n\npseron_img\030"
      "\004 \002(\014\022\027\n\017thumbnail_scene\030\005 \002(\014\022\021\n\ttimest"
      "amp\030\006 \002(\003\"s\n\tStopAlarm\022\021\n\tcamera_id\030\001 \002("
      "\t\022\022\n\ncamera_pos\030\002 \002(\t\022\023\n\013person_imgs\030\003 \003"
      "(\014\022\027\n\017thumbnail_scene\030\004 \002(\014\022\021\n\ttimestamp"
      "\030\005 \002(\003\"t\n\nClimbAlarm\022\021\n\tcamera_id\030\001 \002(\t\022"
      "\022\n\ncamera_pos\030\002 \002(\t\022\023\n\013person_imgs\030\003 \003(\014"
      "\022\027\n\017thumbnail_scene\030\004 \002(\014\022\021\n\ttimestamp\030\005"
      " \002(\003\"u\n\013LingerAlarm\022\021\n\tcamera_id\030\001 \002(\t\022\022"
      "\n\ncamera_pos\030\002 \002(\t\022\023\n\013person_imgs\030\003 \003(\014\022"
      "\027\n\017thumbnail_scene\030\004 \002(\014\022\021\n\ttimestamp\030\005 "
      "\002(\003\"t\n\013GatherAlarm\022\021\n\tcamera_id\030\001 \002(\t\022\022\n"
      "\ncamera_pos\030\002 \002(\t\022\022\n\nperson_img\030\003 \002(\014\022\027\n"
      "\017thumbnail_scene\030\004 \002(\014\022\021\n\ttimestamp\030\005 \002("
      "\003\"D\n\024TodayTotalEventCount\022\023\n\013total_count"
      "\030\001 \002(\005\022\027\n\017blacklist_count\030\002 \002(\005\"\'\n\020OneDa"
      "yEventCount\022\023\n\013event_count\030\001 \003(\005\"A\n\022Even"
      "tSpiderGiagram\022+\n\rsomeday_count\030\001 \003(\0132\024."
      "kf.OneDayEventCount\"X\n\024TodayAlarmEventCo"
      "unt\022\020\n\010ab_count\030\001 \002(\005\022\025\n\rintrude_count\030\002"
      " \002(\005\022\027\n\017blacklist_count\030\003 \002(\005\"4\n\013PieChar"
      "Data\022\022\n\ncamera_pos\030\001 \002(\t\022\021\n\tcost_time\030\002 "
      "\002(\005\"3\n\010PieChart\022\'\n\016pie_chart_data\030\001 \003(\0132"
      "\017.kf.PieCharData\"r\n\016TodayFaceCount\022\022\n\nsn"
      "ap_count\030\001 \002(\005\022\027\n\017blacklist_count\030\002 \002(\005\022"
      "\024\n\014served_count\030\003 \002(\005\022\035\n\025blacklist_alarm"
      "_count\030\004 \002(\005\"+\n\017SnapAreaGiagram\022\030\n\020snap_"
      "count_point\030\001 \003(\005\"0\n\004Tree\022\016\n\006status\030\001 \002("
      "\005\022\013\n\003oid\030\002 \002(\t\022\013\n\003msg\030\003 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1867);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "face.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_face_2eproto
namespace kf {

// ===================================================================

void Box::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Box::kXFieldNumber;
const int Box::kYFieldNumber;
const int Box::kWidthFieldNumber;
const int Box::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Box::Box()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_Box.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.Box)
}
Box::Box(const Box& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&x_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:kf.Box)
}

void Box::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&x_)) + sizeof(height_));
}

Box::~Box() {
  // @@protoc_insertion_point(destructor:kf.Box)
  SharedDtor();
}

void Box::SharedDtor() {
}

void Box::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Box::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Box& Box::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_Box.base);
  return *internal_default_instance();
}


void Box::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&height_) -
        reinterpret_cast<char*>(&x_)) + sizeof(height_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Box::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.Box)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.Box)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.Box)
  return false;
#undef DO_
}

void Box::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // required int32 width = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->width(), output);
  }

  // required int32 height = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->height(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.Box)
}

::google::protobuf::uint8* Box::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.Box)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // required int32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // required int32 width = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->width(), target);
  }

  // required int32 height = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->height(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.Box)
  return target;
}

size_t Box::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.Box)
  size_t total_size = 0;

  if (has_x()) {
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  if (has_width()) {
    // required int32 width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  if (has_height()) {
    // required int32 height = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  return total_size;
}
size_t Box::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.Box)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

    // required int32 width = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());

    // required int32 height = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Box::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.Box)
  GOOGLE_DCHECK_NE(&from, this);
  const Box* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Box>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.Box)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.Box)
    MergeFrom(*source);
  }
}

void Box::MergeFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.Box)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000008u) {
      height_ = from.height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Box::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Box::CopyFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Box::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void Box::Swap(Box* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Box::InternalSwap(Box* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Box::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PersonBoxs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PersonBoxs::kCameraIdFieldNumber;
const int PersonBoxs::kBoxesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersonBoxs::PersonBoxs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_PersonBoxs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.PersonBoxs)
}
PersonBoxs::PersonBoxs(const PersonBoxs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      boxes_(from.boxes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_id()) {
    camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
  }
  // @@protoc_insertion_point(copy_constructor:kf.PersonBoxs)
}

void PersonBoxs::SharedCtor() {
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PersonBoxs::~PersonBoxs() {
  // @@protoc_insertion_point(destructor:kf.PersonBoxs)
  SharedDtor();
}

void PersonBoxs::SharedDtor() {
  camera_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PersonBoxs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PersonBoxs::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PersonBoxs& PersonBoxs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_PersonBoxs.base);
  return *internal_default_instance();
}


void PersonBoxs::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.PersonBoxs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  boxes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    camera_id_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PersonBoxs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.PersonBoxs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string camera_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_id().data(), static_cast<int>(this->camera_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.PersonBoxs.camera_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kf.Box boxes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_boxes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.PersonBoxs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.PersonBoxs)
  return false;
#undef DO_
}

void PersonBoxs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.PersonBoxs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.PersonBoxs.camera_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->camera_id(), output);
  }

  // repeated .kf.Box boxes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boxes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->boxes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.PersonBoxs)
}

::google::protobuf::uint8* PersonBoxs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.PersonBoxs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.PersonBoxs.camera_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->camera_id(), target);
  }

  // repeated .kf.Box boxes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->boxes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->boxes(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.PersonBoxs)
  return target;
}

size_t PersonBoxs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.PersonBoxs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string camera_id = 1;
  if (has_camera_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());
  }
  // repeated .kf.Box boxes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->boxes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->boxes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PersonBoxs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.PersonBoxs)
  GOOGLE_DCHECK_NE(&from, this);
  const PersonBoxs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersonBoxs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.PersonBoxs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.PersonBoxs)
    MergeFrom(*source);
  }
}

void PersonBoxs::MergeFrom(const PersonBoxs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.PersonBoxs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  boxes_.MergeFrom(from.boxes_);
  if (from.has_camera_id()) {
    set_has_camera_id();
    camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
  }
}

void PersonBoxs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.PersonBoxs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersonBoxs::CopyFrom(const PersonBoxs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.PersonBoxs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersonBoxs::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->boxes())) return false;
  return true;
}

void PersonBoxs::Swap(PersonBoxs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersonBoxs::InternalSwap(PersonBoxs* other) {
  using std::swap;
  CastToBase(&boxes_)->InternalSwap(CastToBase(&other->boxes_));
  camera_id_.Swap(&other->camera_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PersonBoxs::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaceInfoPT::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceInfoPT::kIdFieldNumber;
const int FaceInfoPT::kCameraIdFieldNumber;
const int FaceInfoPT::kCameraPosFieldNumber;
const int FaceInfoPT::kImgDataFieldNumber;
const int FaceInfoPT::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceInfoPT::FaceInfoPT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_FaceInfoPT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.FaceInfoPT)
}
FaceInfoPT::FaceInfoPT(const FaceInfoPT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_id()) {
    camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
  }
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_pos()) {
    camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
  }
  img_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_img_data()) {
    img_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_data_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:kf.FaceInfoPT)
}

void FaceInfoPT::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
}

FaceInfoPT::~FaceInfoPT() {
  // @@protoc_insertion_point(destructor:kf.FaceInfoPT)
  SharedDtor();
}

void FaceInfoPT::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  img_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FaceInfoPT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FaceInfoPT::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceInfoPT& FaceInfoPT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_FaceInfoPT.base);
  return *internal_default_instance();
}


void FaceInfoPT::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.FaceInfoPT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      camera_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      camera_pos_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      img_data_.ClearNonDefaultToEmptyNoArena();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FaceInfoPT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.FaceInfoPT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.FaceInfoPT.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_id().data(), static_cast<int>(this->camera_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.FaceInfoPT.camera_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.FaceInfoPT.camera_pos");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes img_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_img_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.FaceInfoPT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.FaceInfoPT)
  return false;
#undef DO_
}

void FaceInfoPT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.FaceInfoPT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.FaceInfoPT.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string camera_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.FaceInfoPT.camera_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->camera_id(), output);
  }

  // required string camera_pos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.FaceInfoPT.camera_pos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->camera_pos(), output);
  }

  // required bytes img_data = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->img_data(), output);
  }

  // required int64 timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.FaceInfoPT)
}

::google::protobuf::uint8* FaceInfoPT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.FaceInfoPT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.FaceInfoPT.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string camera_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.FaceInfoPT.camera_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->camera_id(), target);
  }

  // required string camera_pos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.FaceInfoPT.camera_pos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->camera_pos(), target);
  }

  // required bytes img_data = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->img_data(), target);
  }

  // required int64 timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.FaceInfoPT)
  return target;
}

size_t FaceInfoPT::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.FaceInfoPT)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_camera_id()) {
    // required string camera_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());
  }

  if (has_camera_pos()) {
    // required string camera_pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());
  }

  if (has_img_data()) {
    // required bytes img_data = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->img_data());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t FaceInfoPT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.FaceInfoPT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required string camera_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());

    // required string camera_pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());

    // required bytes img_data = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->img_data());

    // required int64 timestamp = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FaceInfoPT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.FaceInfoPT)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceInfoPT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceInfoPT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.FaceInfoPT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.FaceInfoPT)
    MergeFrom(*source);
  }
}

void FaceInfoPT::MergeFrom(const FaceInfoPT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.FaceInfoPT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_camera_id();
      camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_camera_pos();
      camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_img_data();
      img_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.img_data_);
    }
    if (cached_has_bits & 0x00000010u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FaceInfoPT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.FaceInfoPT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceInfoPT::CopyFrom(const FaceInfoPT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.FaceInfoPT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceInfoPT::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void FaceInfoPT::Swap(FaceInfoPT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceInfoPT::InternalSwap(FaceInfoPT* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_id_.Swap(&other->camera_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_pos_.Swap(&other->camera_pos_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  img_data_.Swap(&other->img_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FaceInfoPT::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaceStatis::InitAsDefaultInstance() {
  ::kf::_FaceStatis_default_instance_._instance.get_mutable()->before_face_ = const_cast< ::kf::FaceInfoPT*>(
      ::kf::FaceInfoPT::internal_default_instance());
  ::kf::_FaceStatis_default_instance_._instance.get_mutable()->after_face_ = const_cast< ::kf::FaceInfoPT*>(
      ::kf::FaceInfoPT::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaceStatis::kBeforeFaceFieldNumber;
const int FaceStatis::kAfterFaceFieldNumber;
const int FaceStatis::kTimeCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaceStatis::FaceStatis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_FaceStatis.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.FaceStatis)
}
FaceStatis::FaceStatis(const FaceStatis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_before_face()) {
    before_face_ = new ::kf::FaceInfoPT(*from.before_face_);
  } else {
    before_face_ = NULL;
  }
  if (from.has_after_face()) {
    after_face_ = new ::kf::FaceInfoPT(*from.after_face_);
  } else {
    after_face_ = NULL;
  }
  time_cost_ = from.time_cost_;
  // @@protoc_insertion_point(copy_constructor:kf.FaceStatis)
}

void FaceStatis::SharedCtor() {
  ::memset(&before_face_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_cost_) -
      reinterpret_cast<char*>(&before_face_)) + sizeof(time_cost_));
}

FaceStatis::~FaceStatis() {
  // @@protoc_insertion_point(destructor:kf.FaceStatis)
  SharedDtor();
}

void FaceStatis::SharedDtor() {
  if (this != internal_default_instance()) delete before_face_;
  if (this != internal_default_instance()) delete after_face_;
}

void FaceStatis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FaceStatis::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaceStatis& FaceStatis::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_FaceStatis.base);
  return *internal_default_instance();
}


void FaceStatis::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.FaceStatis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(before_face_ != NULL);
      before_face_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(after_face_ != NULL);
      after_face_->Clear();
    }
  }
  time_cost_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FaceStatis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.FaceStatis)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kf.FaceInfoPT before_face = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_before_face()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .kf.FaceInfoPT after_face = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_after_face()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 time_cost = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_time_cost();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_cost_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.FaceStatis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.FaceStatis)
  return false;
#undef DO_
}

void FaceStatis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.FaceStatis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kf.FaceInfoPT before_face = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_before_face(), output);
  }

  // required .kf.FaceInfoPT after_face = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_after_face(), output);
  }

  // required int32 time_cost = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->time_cost(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.FaceStatis)
}

::google::protobuf::uint8* FaceStatis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.FaceStatis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kf.FaceInfoPT before_face = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_before_face(), deterministic, target);
  }

  // required .kf.FaceInfoPT after_face = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_after_face(), deterministic, target);
  }

  // required int32 time_cost = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->time_cost(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.FaceStatis)
  return target;
}

size_t FaceStatis::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.FaceStatis)
  size_t total_size = 0;

  if (has_before_face()) {
    // required .kf.FaceInfoPT before_face = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *before_face_);
  }

  if (has_after_face()) {
    // required .kf.FaceInfoPT after_face = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *after_face_);
  }

  if (has_time_cost()) {
    // required int32 time_cost = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time_cost());
  }

  return total_size;
}
size_t FaceStatis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.FaceStatis)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .kf.FaceInfoPT before_face = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *before_face_);

    // required .kf.FaceInfoPT after_face = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *after_face_);

    // required int32 time_cost = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time_cost());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FaceStatis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.FaceStatis)
  GOOGLE_DCHECK_NE(&from, this);
  const FaceStatis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaceStatis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.FaceStatis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.FaceStatis)
    MergeFrom(*source);
  }
}

void FaceStatis::MergeFrom(const FaceStatis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.FaceStatis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_before_face()->::kf::FaceInfoPT::MergeFrom(from.before_face());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_after_face()->::kf::FaceInfoPT::MergeFrom(from.after_face());
    }
    if (cached_has_bits & 0x00000004u) {
      time_cost_ = from.time_cost_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FaceStatis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.FaceStatis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaceStatis::CopyFrom(const FaceStatis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.FaceStatis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaceStatis::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_before_face()) {
    if (!this->before_face_->IsInitialized()) return false;
  }
  if (has_after_face()) {
    if (!this->after_face_->IsInitialized()) return false;
  }
  return true;
}

void FaceStatis::Swap(FaceStatis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaceStatis::InternalSwap(FaceStatis* other) {
  using std::swap;
  swap(before_face_, other->before_face_);
  swap(after_face_, other->after_face_);
  swap(time_cost_, other->time_cost_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FaceStatis::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TrackedFace::InitAsDefaultInstance() {
  ::kf::_TrackedFace_default_instance_._instance.get_mutable()->face_info_ = const_cast< ::kf::FaceInfoPT*>(
      ::kf::FaceInfoPT::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrackedFace::kFaceInfoFieldNumber;
const int TrackedFace::kTrackedIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrackedFace::TrackedFace()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_TrackedFace.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.TrackedFace)
}
TrackedFace::TrackedFace(const TrackedFace& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tracked_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tracked_id()) {
    tracked_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tracked_id_);
  }
  if (from.has_face_info()) {
    face_info_ = new ::kf::FaceInfoPT(*from.face_info_);
  } else {
    face_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kf.TrackedFace)
}

void TrackedFace::SharedCtor() {
  tracked_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_info_ = NULL;
}

TrackedFace::~TrackedFace() {
  // @@protoc_insertion_point(destructor:kf.TrackedFace)
  SharedDtor();
}

void TrackedFace::SharedDtor() {
  tracked_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete face_info_;
}

void TrackedFace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TrackedFace::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrackedFace& TrackedFace::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_TrackedFace.base);
  return *internal_default_instance();
}


void TrackedFace::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.TrackedFace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      tracked_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(face_info_ != NULL);
      face_info_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TrackedFace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.TrackedFace)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .kf.FaceInfoPT face_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_face_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string tracked_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tracked_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tracked_id().data(), static_cast<int>(this->tracked_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.TrackedFace.tracked_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.TrackedFace)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.TrackedFace)
  return false;
#undef DO_
}

void TrackedFace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.TrackedFace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kf.FaceInfoPT face_info = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_face_info(), output);
  }

  // required string tracked_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tracked_id().data(), static_cast<int>(this->tracked_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.TrackedFace.tracked_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tracked_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.TrackedFace)
}

::google::protobuf::uint8* TrackedFace::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.TrackedFace)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .kf.FaceInfoPT face_info = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_face_info(), deterministic, target);
  }

  // required string tracked_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tracked_id().data(), static_cast<int>(this->tracked_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.TrackedFace.tracked_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tracked_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.TrackedFace)
  return target;
}

size_t TrackedFace::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.TrackedFace)
  size_t total_size = 0;

  if (has_tracked_id()) {
    // required string tracked_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tracked_id());
  }

  if (has_face_info()) {
    // required .kf.FaceInfoPT face_info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *face_info_);
  }

  return total_size;
}
size_t TrackedFace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.TrackedFace)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string tracked_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tracked_id());

    // required .kf.FaceInfoPT face_info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *face_info_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrackedFace::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.TrackedFace)
  GOOGLE_DCHECK_NE(&from, this);
  const TrackedFace* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrackedFace>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.TrackedFace)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.TrackedFace)
    MergeFrom(*source);
  }
}

void TrackedFace::MergeFrom(const TrackedFace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.TrackedFace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tracked_id();
      tracked_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tracked_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_face_info()->::kf::FaceInfoPT::MergeFrom(from.face_info());
    }
  }
}

void TrackedFace::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.TrackedFace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrackedFace::CopyFrom(const TrackedFace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.TrackedFace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrackedFace::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_face_info()) {
    if (!this->face_info_->IsInitialized()) return false;
  }
  return true;
}

void TrackedFace::Swap(TrackedFace* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrackedFace::InternalSwap(TrackedFace* other) {
  using std::swap;
  tracked_id_.Swap(&other->tracked_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(face_info_, other->face_info_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TrackedFace::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlackListFaceAlarm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlackListFaceAlarm::kOidFieldNumber;
const int BlackListFaceAlarm::kCameraIdFieldNumber;
const int BlackListFaceAlarm::kCameraPosFieldNumber;
const int BlackListFaceAlarm::kFaceImgFieldNumber;
const int BlackListFaceAlarm::kThumbnailSceneFieldNumber;
const int BlackListFaceAlarm::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlackListFaceAlarm::BlackListFaceAlarm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_BlackListFaceAlarm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.BlackListFaceAlarm)
}
BlackListFaceAlarm::BlackListFaceAlarm(const BlackListFaceAlarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_oid()) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_id()) {
    camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
  }
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_pos()) {
    camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
  }
  face_img_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_face_img()) {
    face_img_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_img_);
  }
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumbnail_scene()) {
    thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:kf.BlackListFaceAlarm)
}

void BlackListFaceAlarm::SharedCtor() {
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_img_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
}

BlackListFaceAlarm::~BlackListFaceAlarm() {
  // @@protoc_insertion_point(destructor:kf.BlackListFaceAlarm)
  SharedDtor();
}

void BlackListFaceAlarm::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  face_img_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlackListFaceAlarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlackListFaceAlarm::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlackListFaceAlarm& BlackListFaceAlarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_BlackListFaceAlarm.base);
  return *internal_default_instance();
}


void BlackListFaceAlarm::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.BlackListFaceAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      oid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      camera_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      camera_pos_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      face_img_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      thumbnail_scene_.ClearNonDefaultToEmptyNoArena();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlackListFaceAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.BlackListFaceAlarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.BlackListFaceAlarm.oid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_id().data(), static_cast<int>(this->camera_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.BlackListFaceAlarm.camera_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.BlackListFaceAlarm.camera_pos");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes face_img = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_face_img()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes thumbnail_scene = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_thumbnail_scene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.BlackListFaceAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.BlackListFaceAlarm)
  return false;
#undef DO_
}

void BlackListFaceAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.BlackListFaceAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string oid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.BlackListFaceAlarm.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // required string camera_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.BlackListFaceAlarm.camera_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->camera_id(), output);
  }

  // required string camera_pos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.BlackListFaceAlarm.camera_pos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->camera_pos(), output);
  }

  // required bytes face_img = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->face_img(), output);
  }

  // required bytes thumbnail_scene = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->thumbnail_scene(), output);
  }

  // required int64 timestamp = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.BlackListFaceAlarm)
}

::google::protobuf::uint8* BlackListFaceAlarm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.BlackListFaceAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string oid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.BlackListFaceAlarm.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // required string camera_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.BlackListFaceAlarm.camera_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->camera_id(), target);
  }

  // required string camera_pos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.BlackListFaceAlarm.camera_pos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->camera_pos(), target);
  }

  // required bytes face_img = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->face_img(), target);
  }

  // required bytes thumbnail_scene = 5;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->thumbnail_scene(), target);
  }

  // required int64 timestamp = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.BlackListFaceAlarm)
  return target;
}

size_t BlackListFaceAlarm::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.BlackListFaceAlarm)
  size_t total_size = 0;

  if (has_oid()) {
    // required string oid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  if (has_camera_id()) {
    // required string camera_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());
  }

  if (has_camera_pos()) {
    // required string camera_pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());
  }

  if (has_face_img()) {
    // required bytes face_img = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->face_img());
  }

  if (has_thumbnail_scene()) {
    // required bytes thumbnail_scene = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t BlackListFaceAlarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.BlackListFaceAlarm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string oid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());

    // required string camera_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());

    // required string camera_pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());

    // required bytes face_img = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->face_img());

    // required bytes thumbnail_scene = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());

    // required int64 timestamp = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlackListFaceAlarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.BlackListFaceAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  const BlackListFaceAlarm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlackListFaceAlarm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.BlackListFaceAlarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.BlackListFaceAlarm)
    MergeFrom(*source);
  }
}

void BlackListFaceAlarm::MergeFrom(const BlackListFaceAlarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.BlackListFaceAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_oid();
      oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_camera_id();
      camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_camera_pos();
      camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_face_img();
      face_img_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.face_img_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_thumbnail_scene();
      thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
    }
    if (cached_has_bits & 0x00000020u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BlackListFaceAlarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.BlackListFaceAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlackListFaceAlarm::CopyFrom(const BlackListFaceAlarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.BlackListFaceAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlackListFaceAlarm::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void BlackListFaceAlarm::Swap(BlackListFaceAlarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlackListFaceAlarm::InternalSwap(BlackListFaceAlarm* other) {
  using std::swap;
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_id_.Swap(&other->camera_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_pos_.Swap(&other->camera_pos_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  face_img_.Swap(&other->face_img_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumbnail_scene_.Swap(&other->thumbnail_scene_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlackListFaceAlarm::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Intruder::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Intruder::kOidFieldNumber;
const int Intruder::kCameraIdFieldNumber;
const int Intruder::kCameraPosFieldNumber;
const int Intruder::kPseronImgsFieldNumber;
const int Intruder::kThumbnailSceneFieldNumber;
const int Intruder::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Intruder::Intruder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_Intruder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.Intruder)
}
Intruder::Intruder(const Intruder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pseron_imgs_(from.pseron_imgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_oid()) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_id()) {
    camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
  }
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_pos()) {
    camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
  }
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumbnail_scene()) {
    thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:kf.Intruder)
}

void Intruder::SharedCtor() {
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
}

Intruder::~Intruder() {
  // @@protoc_insertion_point(destructor:kf.Intruder)
  SharedDtor();
}

void Intruder::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Intruder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Intruder::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Intruder& Intruder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_Intruder.base);
  return *internal_default_instance();
}


void Intruder::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.Intruder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pseron_imgs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      oid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      camera_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      camera_pos_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      thumbnail_scene_.ClearNonDefaultToEmptyNoArena();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Intruder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.Intruder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.Intruder.oid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_id().data(), static_cast<int>(this->camera_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.Intruder.camera_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.Intruder.camera_pos");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes pseron_imgs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_pseron_imgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes thumbnail_scene = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_thumbnail_scene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.Intruder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.Intruder)
  return false;
#undef DO_
}

void Intruder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.Intruder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string oid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.Intruder.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // required string camera_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.Intruder.camera_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->camera_id(), output);
  }

  // required string camera_pos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.Intruder.camera_pos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->camera_pos(), output);
  }

  // repeated bytes pseron_imgs = 4;
  for (int i = 0, n = this->pseron_imgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->pseron_imgs(i), output);
  }

  // required bytes thumbnail_scene = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->thumbnail_scene(), output);
  }

  // required int64 timestamp = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.Intruder)
}

::google::protobuf::uint8* Intruder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.Intruder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string oid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.Intruder.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // required string camera_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.Intruder.camera_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->camera_id(), target);
  }

  // required string camera_pos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.Intruder.camera_pos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->camera_pos(), target);
  }

  // repeated bytes pseron_imgs = 4;
  for (int i = 0, n = this->pseron_imgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(4, this->pseron_imgs(i), target);
  }

  // required bytes thumbnail_scene = 5;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->thumbnail_scene(), target);
  }

  // required int64 timestamp = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.Intruder)
  return target;
}

size_t Intruder::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.Intruder)
  size_t total_size = 0;

  if (has_oid()) {
    // required string oid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  if (has_camera_id()) {
    // required string camera_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());
  }

  if (has_camera_pos()) {
    // required string camera_pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());
  }

  if (has_thumbnail_scene()) {
    // required bytes thumbnail_scene = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t Intruder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.Intruder)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string oid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());

    // required string camera_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());

    // required string camera_pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());

    // required bytes thumbnail_scene = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());

    // required int64 timestamp = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated bytes pseron_imgs = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pseron_imgs_size());
  for (int i = 0, n = this->pseron_imgs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->pseron_imgs(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Intruder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.Intruder)
  GOOGLE_DCHECK_NE(&from, this);
  const Intruder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Intruder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.Intruder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.Intruder)
    MergeFrom(*source);
  }
}

void Intruder::MergeFrom(const Intruder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.Intruder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pseron_imgs_.MergeFrom(from.pseron_imgs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_oid();
      oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_camera_id();
      camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_camera_pos();
      camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_thumbnail_scene();
      thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
    }
    if (cached_has_bits & 0x00000010u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Intruder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.Intruder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Intruder::CopyFrom(const Intruder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.Intruder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Intruder::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void Intruder::Swap(Intruder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Intruder::InternalSwap(Intruder* other) {
  using std::swap;
  pseron_imgs_.InternalSwap(CastToBase(&other->pseron_imgs_));
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_id_.Swap(&other->camera_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_pos_.Swap(&other->camera_pos_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumbnail_scene_.Swap(&other->thumbnail_scene_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Intruder::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ABDoorAlarm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ABDoorAlarm::kOidFieldNumber;
const int ABDoorAlarm::kCameraIdFieldNumber;
const int ABDoorAlarm::kCameraPosFieldNumber;
const int ABDoorAlarm::kPseronImgFieldNumber;
const int ABDoorAlarm::kThumbnailSceneFieldNumber;
const int ABDoorAlarm::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ABDoorAlarm::ABDoorAlarm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_ABDoorAlarm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.ABDoorAlarm)
}
ABDoorAlarm::ABDoorAlarm(const ABDoorAlarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_oid()) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_id()) {
    camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
  }
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_pos()) {
    camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
  }
  pseron_img_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pseron_img()) {
    pseron_img_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseron_img_);
  }
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumbnail_scene()) {
    thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:kf.ABDoorAlarm)
}

void ABDoorAlarm::SharedCtor() {
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseron_img_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
}

ABDoorAlarm::~ABDoorAlarm() {
  // @@protoc_insertion_point(destructor:kf.ABDoorAlarm)
  SharedDtor();
}

void ABDoorAlarm::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pseron_img_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ABDoorAlarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ABDoorAlarm::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ABDoorAlarm& ABDoorAlarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_ABDoorAlarm.base);
  return *internal_default_instance();
}


void ABDoorAlarm::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.ABDoorAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      oid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      camera_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      camera_pos_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      pseron_img_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      thumbnail_scene_.ClearNonDefaultToEmptyNoArena();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ABDoorAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.ABDoorAlarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string oid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.ABDoorAlarm.oid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_id().data(), static_cast<int>(this->camera_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.ABDoorAlarm.camera_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.ABDoorAlarm.camera_pos");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes pseron_img = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pseron_img()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes thumbnail_scene = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_thumbnail_scene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.ABDoorAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.ABDoorAlarm)
  return false;
#undef DO_
}

void ABDoorAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.ABDoorAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string oid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.ABDoorAlarm.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oid(), output);
  }

  // required string camera_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.ABDoorAlarm.camera_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->camera_id(), output);
  }

  // required string camera_pos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.ABDoorAlarm.camera_pos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->camera_pos(), output);
  }

  // required bytes pseron_img = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pseron_img(), output);
  }

  // required bytes thumbnail_scene = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->thumbnail_scene(), output);
  }

  // required int64 timestamp = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.ABDoorAlarm)
}

::google::protobuf::uint8* ABDoorAlarm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.ABDoorAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string oid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.ABDoorAlarm.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oid(), target);
  }

  // required string camera_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.ABDoorAlarm.camera_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->camera_id(), target);
  }

  // required string camera_pos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.ABDoorAlarm.camera_pos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->camera_pos(), target);
  }

  // required bytes pseron_img = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->pseron_img(), target);
  }

  // required bytes thumbnail_scene = 5;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->thumbnail_scene(), target);
  }

  // required int64 timestamp = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.ABDoorAlarm)
  return target;
}

size_t ABDoorAlarm::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.ABDoorAlarm)
  size_t total_size = 0;

  if (has_oid()) {
    // required string oid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  if (has_camera_id()) {
    // required string camera_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());
  }

  if (has_camera_pos()) {
    // required string camera_pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());
  }

  if (has_pseron_img()) {
    // required bytes pseron_img = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pseron_img());
  }

  if (has_thumbnail_scene()) {
    // required bytes thumbnail_scene = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t ABDoorAlarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.ABDoorAlarm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string oid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());

    // required string camera_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());

    // required string camera_pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());

    // required bytes pseron_img = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pseron_img());

    // required bytes thumbnail_scene = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());

    // required int64 timestamp = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ABDoorAlarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.ABDoorAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  const ABDoorAlarm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ABDoorAlarm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.ABDoorAlarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.ABDoorAlarm)
    MergeFrom(*source);
  }
}

void ABDoorAlarm::MergeFrom(const ABDoorAlarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.ABDoorAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_oid();
      oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_camera_id();
      camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_camera_pos();
      camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_pseron_img();
      pseron_img_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pseron_img_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_thumbnail_scene();
      thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
    }
    if (cached_has_bits & 0x00000020u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ABDoorAlarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.ABDoorAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ABDoorAlarm::CopyFrom(const ABDoorAlarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.ABDoorAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ABDoorAlarm::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void ABDoorAlarm::Swap(ABDoorAlarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ABDoorAlarm::InternalSwap(ABDoorAlarm* other) {
  using std::swap;
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_id_.Swap(&other->camera_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_pos_.Swap(&other->camera_pos_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pseron_img_.Swap(&other->pseron_img_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumbnail_scene_.Swap(&other->thumbnail_scene_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ABDoorAlarm::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopAlarm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopAlarm::kCameraIdFieldNumber;
const int StopAlarm::kCameraPosFieldNumber;
const int StopAlarm::kPersonImgsFieldNumber;
const int StopAlarm::kThumbnailSceneFieldNumber;
const int StopAlarm::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopAlarm::StopAlarm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_StopAlarm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.StopAlarm)
}
StopAlarm::StopAlarm(const StopAlarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      person_imgs_(from.person_imgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_id()) {
    camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
  }
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_pos()) {
    camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
  }
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumbnail_scene()) {
    thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:kf.StopAlarm)
}

void StopAlarm::SharedCtor() {
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
}

StopAlarm::~StopAlarm() {
  // @@protoc_insertion_point(destructor:kf.StopAlarm)
  SharedDtor();
}

void StopAlarm::SharedDtor() {
  camera_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StopAlarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StopAlarm::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopAlarm& StopAlarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_StopAlarm.base);
  return *internal_default_instance();
}


void StopAlarm::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.StopAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  person_imgs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      camera_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      camera_pos_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      thumbnail_scene_.ClearNonDefaultToEmptyNoArena();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StopAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.StopAlarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string camera_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_id().data(), static_cast<int>(this->camera_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.StopAlarm.camera_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.StopAlarm.camera_pos");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes person_imgs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_person_imgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes thumbnail_scene = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_thumbnail_scene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.StopAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.StopAlarm)
  return false;
#undef DO_
}

void StopAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.StopAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.StopAlarm.camera_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->camera_id(), output);
  }

  // required string camera_pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.StopAlarm.camera_pos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->camera_pos(), output);
  }

  // repeated bytes person_imgs = 3;
  for (int i = 0, n = this->person_imgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->person_imgs(i), output);
  }

  // required bytes thumbnail_scene = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->thumbnail_scene(), output);
  }

  // required int64 timestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.StopAlarm)
}

::google::protobuf::uint8* StopAlarm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.StopAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.StopAlarm.camera_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->camera_id(), target);
  }

  // required string camera_pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.StopAlarm.camera_pos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->camera_pos(), target);
  }

  // repeated bytes person_imgs = 3;
  for (int i = 0, n = this->person_imgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->person_imgs(i), target);
  }

  // required bytes thumbnail_scene = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->thumbnail_scene(), target);
  }

  // required int64 timestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.StopAlarm)
  return target;
}

size_t StopAlarm::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.StopAlarm)
  size_t total_size = 0;

  if (has_camera_id()) {
    // required string camera_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());
  }

  if (has_camera_pos()) {
    // required string camera_pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());
  }

  if (has_thumbnail_scene()) {
    // required bytes thumbnail_scene = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t StopAlarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.StopAlarm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string camera_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());

    // required string camera_pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());

    // required bytes thumbnail_scene = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());

    // required int64 timestamp = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated bytes person_imgs = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->person_imgs_size());
  for (int i = 0, n = this->person_imgs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->person_imgs(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopAlarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.StopAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  const StopAlarm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopAlarm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.StopAlarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.StopAlarm)
    MergeFrom(*source);
  }
}

void StopAlarm::MergeFrom(const StopAlarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.StopAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  person_imgs_.MergeFrom(from.person_imgs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_camera_id();
      camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_camera_pos();
      camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_thumbnail_scene();
      thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StopAlarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.StopAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopAlarm::CopyFrom(const StopAlarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.StopAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopAlarm::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void StopAlarm::Swap(StopAlarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopAlarm::InternalSwap(StopAlarm* other) {
  using std::swap;
  person_imgs_.InternalSwap(CastToBase(&other->person_imgs_));
  camera_id_.Swap(&other->camera_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_pos_.Swap(&other->camera_pos_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumbnail_scene_.Swap(&other->thumbnail_scene_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StopAlarm::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClimbAlarm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClimbAlarm::kCameraIdFieldNumber;
const int ClimbAlarm::kCameraPosFieldNumber;
const int ClimbAlarm::kPersonImgsFieldNumber;
const int ClimbAlarm::kThumbnailSceneFieldNumber;
const int ClimbAlarm::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClimbAlarm::ClimbAlarm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_ClimbAlarm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.ClimbAlarm)
}
ClimbAlarm::ClimbAlarm(const ClimbAlarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      person_imgs_(from.person_imgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_id()) {
    camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
  }
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_pos()) {
    camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
  }
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumbnail_scene()) {
    thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:kf.ClimbAlarm)
}

void ClimbAlarm::SharedCtor() {
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
}

ClimbAlarm::~ClimbAlarm() {
  // @@protoc_insertion_point(destructor:kf.ClimbAlarm)
  SharedDtor();
}

void ClimbAlarm::SharedDtor() {
  camera_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClimbAlarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClimbAlarm::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClimbAlarm& ClimbAlarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_ClimbAlarm.base);
  return *internal_default_instance();
}


void ClimbAlarm::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.ClimbAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  person_imgs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      camera_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      camera_pos_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      thumbnail_scene_.ClearNonDefaultToEmptyNoArena();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClimbAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.ClimbAlarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string camera_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_id().data(), static_cast<int>(this->camera_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.ClimbAlarm.camera_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.ClimbAlarm.camera_pos");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes person_imgs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_person_imgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes thumbnail_scene = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_thumbnail_scene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.ClimbAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.ClimbAlarm)
  return false;
#undef DO_
}

void ClimbAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.ClimbAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.ClimbAlarm.camera_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->camera_id(), output);
  }

  // required string camera_pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.ClimbAlarm.camera_pos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->camera_pos(), output);
  }

  // repeated bytes person_imgs = 3;
  for (int i = 0, n = this->person_imgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->person_imgs(i), output);
  }

  // required bytes thumbnail_scene = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->thumbnail_scene(), output);
  }

  // required int64 timestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.ClimbAlarm)
}

::google::protobuf::uint8* ClimbAlarm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.ClimbAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.ClimbAlarm.camera_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->camera_id(), target);
  }

  // required string camera_pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.ClimbAlarm.camera_pos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->camera_pos(), target);
  }

  // repeated bytes person_imgs = 3;
  for (int i = 0, n = this->person_imgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->person_imgs(i), target);
  }

  // required bytes thumbnail_scene = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->thumbnail_scene(), target);
  }

  // required int64 timestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.ClimbAlarm)
  return target;
}

size_t ClimbAlarm::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.ClimbAlarm)
  size_t total_size = 0;

  if (has_camera_id()) {
    // required string camera_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());
  }

  if (has_camera_pos()) {
    // required string camera_pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());
  }

  if (has_thumbnail_scene()) {
    // required bytes thumbnail_scene = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t ClimbAlarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.ClimbAlarm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string camera_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());

    // required string camera_pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());

    // required bytes thumbnail_scene = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());

    // required int64 timestamp = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated bytes person_imgs = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->person_imgs_size());
  for (int i = 0, n = this->person_imgs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->person_imgs(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClimbAlarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.ClimbAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  const ClimbAlarm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClimbAlarm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.ClimbAlarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.ClimbAlarm)
    MergeFrom(*source);
  }
}

void ClimbAlarm::MergeFrom(const ClimbAlarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.ClimbAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  person_imgs_.MergeFrom(from.person_imgs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_camera_id();
      camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_camera_pos();
      camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_thumbnail_scene();
      thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClimbAlarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.ClimbAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClimbAlarm::CopyFrom(const ClimbAlarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.ClimbAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClimbAlarm::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ClimbAlarm::Swap(ClimbAlarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClimbAlarm::InternalSwap(ClimbAlarm* other) {
  using std::swap;
  person_imgs_.InternalSwap(CastToBase(&other->person_imgs_));
  camera_id_.Swap(&other->camera_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_pos_.Swap(&other->camera_pos_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumbnail_scene_.Swap(&other->thumbnail_scene_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClimbAlarm::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LingerAlarm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LingerAlarm::kCameraIdFieldNumber;
const int LingerAlarm::kCameraPosFieldNumber;
const int LingerAlarm::kPersonImgsFieldNumber;
const int LingerAlarm::kThumbnailSceneFieldNumber;
const int LingerAlarm::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LingerAlarm::LingerAlarm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_LingerAlarm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.LingerAlarm)
}
LingerAlarm::LingerAlarm(const LingerAlarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      person_imgs_(from.person_imgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_id()) {
    camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
  }
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_pos()) {
    camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
  }
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumbnail_scene()) {
    thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:kf.LingerAlarm)
}

void LingerAlarm::SharedCtor() {
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
}

LingerAlarm::~LingerAlarm() {
  // @@protoc_insertion_point(destructor:kf.LingerAlarm)
  SharedDtor();
}

void LingerAlarm::SharedDtor() {
  camera_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LingerAlarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LingerAlarm::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LingerAlarm& LingerAlarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_LingerAlarm.base);
  return *internal_default_instance();
}


void LingerAlarm::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.LingerAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  person_imgs_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      camera_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      camera_pos_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      thumbnail_scene_.ClearNonDefaultToEmptyNoArena();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LingerAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.LingerAlarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string camera_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_id().data(), static_cast<int>(this->camera_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.LingerAlarm.camera_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.LingerAlarm.camera_pos");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes person_imgs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_person_imgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes thumbnail_scene = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_thumbnail_scene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.LingerAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.LingerAlarm)
  return false;
#undef DO_
}

void LingerAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.LingerAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.LingerAlarm.camera_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->camera_id(), output);
  }

  // required string camera_pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.LingerAlarm.camera_pos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->camera_pos(), output);
  }

  // repeated bytes person_imgs = 3;
  for (int i = 0, n = this->person_imgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->person_imgs(i), output);
  }

  // required bytes thumbnail_scene = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->thumbnail_scene(), output);
  }

  // required int64 timestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.LingerAlarm)
}

::google::protobuf::uint8* LingerAlarm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.LingerAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.LingerAlarm.camera_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->camera_id(), target);
  }

  // required string camera_pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.LingerAlarm.camera_pos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->camera_pos(), target);
  }

  // repeated bytes person_imgs = 3;
  for (int i = 0, n = this->person_imgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->person_imgs(i), target);
  }

  // required bytes thumbnail_scene = 4;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->thumbnail_scene(), target);
  }

  // required int64 timestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.LingerAlarm)
  return target;
}

size_t LingerAlarm::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.LingerAlarm)
  size_t total_size = 0;

  if (has_camera_id()) {
    // required string camera_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());
  }

  if (has_camera_pos()) {
    // required string camera_pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());
  }

  if (has_thumbnail_scene()) {
    // required bytes thumbnail_scene = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t LingerAlarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.LingerAlarm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string camera_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());

    // required string camera_pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());

    // required bytes thumbnail_scene = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());

    // required int64 timestamp = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated bytes person_imgs = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->person_imgs_size());
  for (int i = 0, n = this->person_imgs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->person_imgs(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LingerAlarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.LingerAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  const LingerAlarm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LingerAlarm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.LingerAlarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.LingerAlarm)
    MergeFrom(*source);
  }
}

void LingerAlarm::MergeFrom(const LingerAlarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.LingerAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  person_imgs_.MergeFrom(from.person_imgs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_camera_id();
      camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_camera_pos();
      camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_thumbnail_scene();
      thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LingerAlarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.LingerAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LingerAlarm::CopyFrom(const LingerAlarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.LingerAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LingerAlarm::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void LingerAlarm::Swap(LingerAlarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LingerAlarm::InternalSwap(LingerAlarm* other) {
  using std::swap;
  person_imgs_.InternalSwap(CastToBase(&other->person_imgs_));
  camera_id_.Swap(&other->camera_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_pos_.Swap(&other->camera_pos_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumbnail_scene_.Swap(&other->thumbnail_scene_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LingerAlarm::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GatherAlarm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GatherAlarm::kCameraIdFieldNumber;
const int GatherAlarm::kCameraPosFieldNumber;
const int GatherAlarm::kPersonImgFieldNumber;
const int GatherAlarm::kThumbnailSceneFieldNumber;
const int GatherAlarm::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GatherAlarm::GatherAlarm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_GatherAlarm.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.GatherAlarm)
}
GatherAlarm::GatherAlarm(const GatherAlarm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_id()) {
    camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
  }
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_pos()) {
    camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
  }
  person_img_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_person_img()) {
    person_img_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.person_img_);
  }
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumbnail_scene()) {
    thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:kf.GatherAlarm)
}

void GatherAlarm::SharedCtor() {
  camera_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  person_img_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_LONGLONG(0);
}

GatherAlarm::~GatherAlarm() {
  // @@protoc_insertion_point(destructor:kf.GatherAlarm)
  SharedDtor();
}

void GatherAlarm::SharedDtor() {
  camera_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camera_pos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  person_img_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_scene_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GatherAlarm::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GatherAlarm::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GatherAlarm& GatherAlarm::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_GatherAlarm.base);
  return *internal_default_instance();
}


void GatherAlarm::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.GatherAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      camera_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      camera_pos_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      person_img_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      thumbnail_scene_.ClearNonDefaultToEmptyNoArena();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GatherAlarm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.GatherAlarm)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string camera_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_id().data(), static_cast<int>(this->camera_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.GatherAlarm.camera_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string camera_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.GatherAlarm.camera_pos");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes person_img = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_person_img()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes thumbnail_scene = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_thumbnail_scene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.GatherAlarm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.GatherAlarm)
  return false;
#undef DO_
}

void GatherAlarm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.GatherAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.GatherAlarm.camera_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->camera_id(), output);
  }

  // required string camera_pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.GatherAlarm.camera_pos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->camera_pos(), output);
  }

  // required bytes person_img = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->person_img(), output);
  }

  // required bytes thumbnail_scene = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->thumbnail_scene(), output);
  }

  // required int64 timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.GatherAlarm)
}

::google::protobuf::uint8* GatherAlarm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.GatherAlarm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_id().data(), static_cast<int>(this->camera_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.GatherAlarm.camera_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->camera_id(), target);
  }

  // required string camera_pos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.GatherAlarm.camera_pos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->camera_pos(), target);
  }

  // required bytes person_img = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->person_img(), target);
  }

  // required bytes thumbnail_scene = 4;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->thumbnail_scene(), target);
  }

  // required int64 timestamp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.GatherAlarm)
  return target;
}

size_t GatherAlarm::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.GatherAlarm)
  size_t total_size = 0;

  if (has_camera_id()) {
    // required string camera_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());
  }

  if (has_camera_pos()) {
    // required string camera_pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());
  }

  if (has_person_img()) {
    // required bytes person_img = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->person_img());
  }

  if (has_thumbnail_scene()) {
    // required bytes thumbnail_scene = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());
  }

  if (has_timestamp()) {
    // required int64 timestamp = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t GatherAlarm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.GatherAlarm)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string camera_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_id());

    // required string camera_pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());

    // required bytes person_img = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->person_img());

    // required bytes thumbnail_scene = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail_scene());

    // required int64 timestamp = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GatherAlarm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.GatherAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  const GatherAlarm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GatherAlarm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.GatherAlarm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.GatherAlarm)
    MergeFrom(*source);
  }
}

void GatherAlarm::MergeFrom(const GatherAlarm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.GatherAlarm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_camera_id();
      camera_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_camera_pos();
      camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_person_img();
      person_img_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.person_img_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_thumbnail_scene();
      thumbnail_scene_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_scene_);
    }
    if (cached_has_bits & 0x00000010u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GatherAlarm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.GatherAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GatherAlarm::CopyFrom(const GatherAlarm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.GatherAlarm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GatherAlarm::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void GatherAlarm::Swap(GatherAlarm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GatherAlarm::InternalSwap(GatherAlarm* other) {
  using std::swap;
  camera_id_.Swap(&other->camera_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camera_pos_.Swap(&other->camera_pos_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  person_img_.Swap(&other->person_img_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumbnail_scene_.Swap(&other->thumbnail_scene_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GatherAlarm::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TodayTotalEventCount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TodayTotalEventCount::kTotalCountFieldNumber;
const int TodayTotalEventCount::kBlacklistCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TodayTotalEventCount::TodayTotalEventCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_TodayTotalEventCount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.TodayTotalEventCount)
}
TodayTotalEventCount::TodayTotalEventCount(const TodayTotalEventCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_count_, &from.total_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&blacklist_count_) -
    reinterpret_cast<char*>(&total_count_)) + sizeof(blacklist_count_));
  // @@protoc_insertion_point(copy_constructor:kf.TodayTotalEventCount)
}

void TodayTotalEventCount::SharedCtor() {
  ::memset(&total_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blacklist_count_) -
      reinterpret_cast<char*>(&total_count_)) + sizeof(blacklist_count_));
}

TodayTotalEventCount::~TodayTotalEventCount() {
  // @@protoc_insertion_point(destructor:kf.TodayTotalEventCount)
  SharedDtor();
}

void TodayTotalEventCount::SharedDtor() {
}

void TodayTotalEventCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TodayTotalEventCount::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TodayTotalEventCount& TodayTotalEventCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_TodayTotalEventCount.base);
  return *internal_default_instance();
}


void TodayTotalEventCount::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.TodayTotalEventCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&total_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&blacklist_count_) -
        reinterpret_cast<char*>(&total_count_)) + sizeof(blacklist_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TodayTotalEventCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.TodayTotalEventCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 total_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_total_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 blacklist_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_blacklist_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blacklist_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.TodayTotalEventCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.TodayTotalEventCount)
  return false;
#undef DO_
}

void TodayTotalEventCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.TodayTotalEventCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 total_count = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->total_count(), output);
  }

  // required int32 blacklist_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->blacklist_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.TodayTotalEventCount)
}

::google::protobuf::uint8* TodayTotalEventCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.TodayTotalEventCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 total_count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->total_count(), target);
  }

  // required int32 blacklist_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->blacklist_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.TodayTotalEventCount)
  return target;
}

size_t TodayTotalEventCount::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.TodayTotalEventCount)
  size_t total_size = 0;

  if (has_total_count()) {
    // required int32 total_count = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_count());
  }

  if (has_blacklist_count()) {
    // required int32 blacklist_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blacklist_count());
  }

  return total_size;
}
size_t TodayTotalEventCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.TodayTotalEventCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 total_count = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_count());

    // required int32 blacklist_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blacklist_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TodayTotalEventCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.TodayTotalEventCount)
  GOOGLE_DCHECK_NE(&from, this);
  const TodayTotalEventCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TodayTotalEventCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.TodayTotalEventCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.TodayTotalEventCount)
    MergeFrom(*source);
  }
}

void TodayTotalEventCount::MergeFrom(const TodayTotalEventCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.TodayTotalEventCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_count_ = from.total_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      blacklist_count_ = from.blacklist_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TodayTotalEventCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.TodayTotalEventCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TodayTotalEventCount::CopyFrom(const TodayTotalEventCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.TodayTotalEventCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TodayTotalEventCount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void TodayTotalEventCount::Swap(TodayTotalEventCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TodayTotalEventCount::InternalSwap(TodayTotalEventCount* other) {
  using std::swap;
  swap(total_count_, other->total_count_);
  swap(blacklist_count_, other->blacklist_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TodayTotalEventCount::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OneDayEventCount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneDayEventCount::kEventCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneDayEventCount::OneDayEventCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_OneDayEventCount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.OneDayEventCount)
}
OneDayEventCount::OneDayEventCount(const OneDayEventCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      event_count_(from.event_count_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kf.OneDayEventCount)
}

void OneDayEventCount::SharedCtor() {
}

OneDayEventCount::~OneDayEventCount() {
  // @@protoc_insertion_point(destructor:kf.OneDayEventCount)
  SharedDtor();
}

void OneDayEventCount::SharedDtor() {
}

void OneDayEventCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OneDayEventCount::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OneDayEventCount& OneDayEventCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_OneDayEventCount.base);
  return *internal_default_instance();
}


void OneDayEventCount::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.OneDayEventCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_count_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneDayEventCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.OneDayEventCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 event_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_event_count())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_event_count())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.OneDayEventCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.OneDayEventCount)
  return false;
#undef DO_
}

void OneDayEventCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.OneDayEventCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 event_count = 1;
  for (int i = 0, n = this->event_count_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->event_count(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.OneDayEventCount)
}

::google::protobuf::uint8* OneDayEventCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.OneDayEventCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 event_count = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->event_count_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.OneDayEventCount)
  return target;
}

size_t OneDayEventCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.OneDayEventCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 event_count = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->event_count_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->event_count_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneDayEventCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.OneDayEventCount)
  GOOGLE_DCHECK_NE(&from, this);
  const OneDayEventCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneDayEventCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.OneDayEventCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.OneDayEventCount)
    MergeFrom(*source);
  }
}

void OneDayEventCount::MergeFrom(const OneDayEventCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.OneDayEventCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_count_.MergeFrom(from.event_count_);
}

void OneDayEventCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.OneDayEventCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneDayEventCount::CopyFrom(const OneDayEventCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.OneDayEventCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneDayEventCount::IsInitialized() const {
  return true;
}

void OneDayEventCount::Swap(OneDayEventCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneDayEventCount::InternalSwap(OneDayEventCount* other) {
  using std::swap;
  event_count_.InternalSwap(&other->event_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OneDayEventCount::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventSpiderGiagram::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventSpiderGiagram::kSomedayCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventSpiderGiagram::EventSpiderGiagram()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_EventSpiderGiagram.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.EventSpiderGiagram)
}
EventSpiderGiagram::EventSpiderGiagram(const EventSpiderGiagram& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      someday_count_(from.someday_count_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kf.EventSpiderGiagram)
}

void EventSpiderGiagram::SharedCtor() {
}

EventSpiderGiagram::~EventSpiderGiagram() {
  // @@protoc_insertion_point(destructor:kf.EventSpiderGiagram)
  SharedDtor();
}

void EventSpiderGiagram::SharedDtor() {
}

void EventSpiderGiagram::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventSpiderGiagram::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventSpiderGiagram& EventSpiderGiagram::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_EventSpiderGiagram.base);
  return *internal_default_instance();
}


void EventSpiderGiagram::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.EventSpiderGiagram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  someday_count_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EventSpiderGiagram::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.EventSpiderGiagram)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .kf.OneDayEventCount someday_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_someday_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.EventSpiderGiagram)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.EventSpiderGiagram)
  return false;
#undef DO_
}

void EventSpiderGiagram::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.EventSpiderGiagram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kf.OneDayEventCount someday_count = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->someday_count_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->someday_count(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.EventSpiderGiagram)
}

::google::protobuf::uint8* EventSpiderGiagram::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.EventSpiderGiagram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kf.OneDayEventCount someday_count = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->someday_count_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->someday_count(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.EventSpiderGiagram)
  return target;
}

size_t EventSpiderGiagram::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.EventSpiderGiagram)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .kf.OneDayEventCount someday_count = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->someday_count_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->someday_count(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventSpiderGiagram::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.EventSpiderGiagram)
  GOOGLE_DCHECK_NE(&from, this);
  const EventSpiderGiagram* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventSpiderGiagram>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.EventSpiderGiagram)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.EventSpiderGiagram)
    MergeFrom(*source);
  }
}

void EventSpiderGiagram::MergeFrom(const EventSpiderGiagram& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.EventSpiderGiagram)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  someday_count_.MergeFrom(from.someday_count_);
}

void EventSpiderGiagram::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.EventSpiderGiagram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventSpiderGiagram::CopyFrom(const EventSpiderGiagram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.EventSpiderGiagram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventSpiderGiagram::IsInitialized() const {
  return true;
}

void EventSpiderGiagram::Swap(EventSpiderGiagram* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventSpiderGiagram::InternalSwap(EventSpiderGiagram* other) {
  using std::swap;
  CastToBase(&someday_count_)->InternalSwap(CastToBase(&other->someday_count_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventSpiderGiagram::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TodayAlarmEventCount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TodayAlarmEventCount::kAbCountFieldNumber;
const int TodayAlarmEventCount::kIntrudeCountFieldNumber;
const int TodayAlarmEventCount::kBlacklistCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TodayAlarmEventCount::TodayAlarmEventCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_TodayAlarmEventCount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.TodayAlarmEventCount)
}
TodayAlarmEventCount::TodayAlarmEventCount(const TodayAlarmEventCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ab_count_, &from.ab_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&blacklist_count_) -
    reinterpret_cast<char*>(&ab_count_)) + sizeof(blacklist_count_));
  // @@protoc_insertion_point(copy_constructor:kf.TodayAlarmEventCount)
}

void TodayAlarmEventCount::SharedCtor() {
  ::memset(&ab_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blacklist_count_) -
      reinterpret_cast<char*>(&ab_count_)) + sizeof(blacklist_count_));
}

TodayAlarmEventCount::~TodayAlarmEventCount() {
  // @@protoc_insertion_point(destructor:kf.TodayAlarmEventCount)
  SharedDtor();
}

void TodayAlarmEventCount::SharedDtor() {
}

void TodayAlarmEventCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TodayAlarmEventCount::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TodayAlarmEventCount& TodayAlarmEventCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_TodayAlarmEventCount.base);
  return *internal_default_instance();
}


void TodayAlarmEventCount::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.TodayAlarmEventCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&ab_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&blacklist_count_) -
        reinterpret_cast<char*>(&ab_count_)) + sizeof(blacklist_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TodayAlarmEventCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.TodayAlarmEventCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ab_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ab_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ab_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 intrude_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_intrude_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intrude_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 blacklist_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_blacklist_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blacklist_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.TodayAlarmEventCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.TodayAlarmEventCount)
  return false;
#undef DO_
}

void TodayAlarmEventCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.TodayAlarmEventCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ab_count = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ab_count(), output);
  }

  // required int32 intrude_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->intrude_count(), output);
  }

  // required int32 blacklist_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->blacklist_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.TodayAlarmEventCount)
}

::google::protobuf::uint8* TodayAlarmEventCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.TodayAlarmEventCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 ab_count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ab_count(), target);
  }

  // required int32 intrude_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->intrude_count(), target);
  }

  // required int32 blacklist_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->blacklist_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.TodayAlarmEventCount)
  return target;
}

size_t TodayAlarmEventCount::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.TodayAlarmEventCount)
  size_t total_size = 0;

  if (has_ab_count()) {
    // required int32 ab_count = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ab_count());
  }

  if (has_intrude_count()) {
    // required int32 intrude_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intrude_count());
  }

  if (has_blacklist_count()) {
    // required int32 blacklist_count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blacklist_count());
  }

  return total_size;
}
size_t TodayAlarmEventCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.TodayAlarmEventCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 ab_count = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ab_count());

    // required int32 intrude_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intrude_count());

    // required int32 blacklist_count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blacklist_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TodayAlarmEventCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.TodayAlarmEventCount)
  GOOGLE_DCHECK_NE(&from, this);
  const TodayAlarmEventCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TodayAlarmEventCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.TodayAlarmEventCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.TodayAlarmEventCount)
    MergeFrom(*source);
  }
}

void TodayAlarmEventCount::MergeFrom(const TodayAlarmEventCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.TodayAlarmEventCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      ab_count_ = from.ab_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      intrude_count_ = from.intrude_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      blacklist_count_ = from.blacklist_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TodayAlarmEventCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.TodayAlarmEventCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TodayAlarmEventCount::CopyFrom(const TodayAlarmEventCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.TodayAlarmEventCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TodayAlarmEventCount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void TodayAlarmEventCount::Swap(TodayAlarmEventCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TodayAlarmEventCount::InternalSwap(TodayAlarmEventCount* other) {
  using std::swap;
  swap(ab_count_, other->ab_count_);
  swap(intrude_count_, other->intrude_count_);
  swap(blacklist_count_, other->blacklist_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TodayAlarmEventCount::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PieCharData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PieCharData::kCameraPosFieldNumber;
const int PieCharData::kCostTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PieCharData::PieCharData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_PieCharData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.PieCharData)
}
PieCharData::PieCharData(const PieCharData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_camera_pos()) {
    camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
  }
  cost_time_ = from.cost_time_;
  // @@protoc_insertion_point(copy_constructor:kf.PieCharData)
}

void PieCharData::SharedCtor() {
  camera_pos_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cost_time_ = 0;
}

PieCharData::~PieCharData() {
  // @@protoc_insertion_point(destructor:kf.PieCharData)
  SharedDtor();
}

void PieCharData::SharedDtor() {
  camera_pos_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PieCharData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PieCharData::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PieCharData& PieCharData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_PieCharData.base);
  return *internal_default_instance();
}


void PieCharData::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.PieCharData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    camera_pos_.ClearNonDefaultToEmptyNoArena();
  }
  cost_time_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PieCharData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.PieCharData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string camera_pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camera_pos()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.PieCharData.camera_pos");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 cost_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_cost_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.PieCharData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.PieCharData)
  return false;
#undef DO_
}

void PieCharData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.PieCharData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_pos = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.PieCharData.camera_pos");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->camera_pos(), output);
  }

  // required int32 cost_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cost_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.PieCharData)
}

::google::protobuf::uint8* PieCharData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.PieCharData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string camera_pos = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->camera_pos().data(), static_cast<int>(this->camera_pos().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.PieCharData.camera_pos");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->camera_pos(), target);
  }

  // required int32 cost_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cost_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.PieCharData)
  return target;
}

size_t PieCharData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.PieCharData)
  size_t total_size = 0;

  if (has_camera_pos()) {
    // required string camera_pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());
  }

  if (has_cost_time()) {
    // required int32 cost_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cost_time());
  }

  return total_size;
}
size_t PieCharData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.PieCharData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string camera_pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camera_pos());

    // required int32 cost_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cost_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PieCharData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.PieCharData)
  GOOGLE_DCHECK_NE(&from, this);
  const PieCharData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PieCharData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.PieCharData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.PieCharData)
    MergeFrom(*source);
  }
}

void PieCharData::MergeFrom(const PieCharData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.PieCharData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_camera_pos();
      camera_pos_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camera_pos_);
    }
    if (cached_has_bits & 0x00000002u) {
      cost_time_ = from.cost_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PieCharData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.PieCharData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PieCharData::CopyFrom(const PieCharData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.PieCharData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PieCharData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PieCharData::Swap(PieCharData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PieCharData::InternalSwap(PieCharData* other) {
  using std::swap;
  camera_pos_.Swap(&other->camera_pos_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cost_time_, other->cost_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PieCharData::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PieChart::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PieChart::kPieChartDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PieChart::PieChart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_PieChart.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.PieChart)
}
PieChart::PieChart(const PieChart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      pie_chart_data_(from.pie_chart_data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kf.PieChart)
}

void PieChart::SharedCtor() {
}

PieChart::~PieChart() {
  // @@protoc_insertion_point(destructor:kf.PieChart)
  SharedDtor();
}

void PieChart::SharedDtor() {
}

void PieChart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PieChart::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PieChart& PieChart::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_PieChart.base);
  return *internal_default_instance();
}


void PieChart::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.PieChart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pie_chart_data_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PieChart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.PieChart)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .kf.PieCharData pie_chart_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pie_chart_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.PieChart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.PieChart)
  return false;
#undef DO_
}

void PieChart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.PieChart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kf.PieCharData pie_chart_data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pie_chart_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pie_chart_data(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.PieChart)
}

::google::protobuf::uint8* PieChart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.PieChart)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kf.PieCharData pie_chart_data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pie_chart_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pie_chart_data(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.PieChart)
  return target;
}

size_t PieChart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.PieChart)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .kf.PieCharData pie_chart_data = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pie_chart_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pie_chart_data(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PieChart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.PieChart)
  GOOGLE_DCHECK_NE(&from, this);
  const PieChart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PieChart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.PieChart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.PieChart)
    MergeFrom(*source);
  }
}

void PieChart::MergeFrom(const PieChart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.PieChart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pie_chart_data_.MergeFrom(from.pie_chart_data_);
}

void PieChart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.PieChart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PieChart::CopyFrom(const PieChart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.PieChart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PieChart::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->pie_chart_data())) return false;
  return true;
}

void PieChart::Swap(PieChart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PieChart::InternalSwap(PieChart* other) {
  using std::swap;
  CastToBase(&pie_chart_data_)->InternalSwap(CastToBase(&other->pie_chart_data_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PieChart::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TodayFaceCount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TodayFaceCount::kSnapCountFieldNumber;
const int TodayFaceCount::kBlacklistCountFieldNumber;
const int TodayFaceCount::kServedCountFieldNumber;
const int TodayFaceCount::kBlacklistAlarmCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TodayFaceCount::TodayFaceCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_TodayFaceCount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.TodayFaceCount)
}
TodayFaceCount::TodayFaceCount(const TodayFaceCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&snap_count_, &from.snap_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&blacklist_alarm_count_) -
    reinterpret_cast<char*>(&snap_count_)) + sizeof(blacklist_alarm_count_));
  // @@protoc_insertion_point(copy_constructor:kf.TodayFaceCount)
}

void TodayFaceCount::SharedCtor() {
  ::memset(&snap_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blacklist_alarm_count_) -
      reinterpret_cast<char*>(&snap_count_)) + sizeof(blacklist_alarm_count_));
}

TodayFaceCount::~TodayFaceCount() {
  // @@protoc_insertion_point(destructor:kf.TodayFaceCount)
  SharedDtor();
}

void TodayFaceCount::SharedDtor() {
}

void TodayFaceCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TodayFaceCount::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TodayFaceCount& TodayFaceCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_TodayFaceCount.base);
  return *internal_default_instance();
}


void TodayFaceCount::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.TodayFaceCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    ::memset(&snap_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&blacklist_alarm_count_) -
        reinterpret_cast<char*>(&snap_count_)) + sizeof(blacklist_alarm_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TodayFaceCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.TodayFaceCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 snap_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_snap_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &snap_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 blacklist_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_blacklist_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blacklist_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 served_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_served_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &served_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 blacklist_alarm_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_blacklist_alarm_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blacklist_alarm_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.TodayFaceCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.TodayFaceCount)
  return false;
#undef DO_
}

void TodayFaceCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.TodayFaceCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 snap_count = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->snap_count(), output);
  }

  // required int32 blacklist_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->blacklist_count(), output);
  }

  // required int32 served_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->served_count(), output);
  }

  // required int32 blacklist_alarm_count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->blacklist_alarm_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.TodayFaceCount)
}

::google::protobuf::uint8* TodayFaceCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.TodayFaceCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 snap_count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->snap_count(), target);
  }

  // required int32 blacklist_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->blacklist_count(), target);
  }

  // required int32 served_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->served_count(), target);
  }

  // required int32 blacklist_alarm_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->blacklist_alarm_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.TodayFaceCount)
  return target;
}

size_t TodayFaceCount::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.TodayFaceCount)
  size_t total_size = 0;

  if (has_snap_count()) {
    // required int32 snap_count = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->snap_count());
  }

  if (has_blacklist_count()) {
    // required int32 blacklist_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blacklist_count());
  }

  if (has_served_count()) {
    // required int32 served_count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->served_count());
  }

  if (has_blacklist_alarm_count()) {
    // required int32 blacklist_alarm_count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blacklist_alarm_count());
  }

  return total_size;
}
size_t TodayFaceCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.TodayFaceCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 snap_count = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->snap_count());

    // required int32 blacklist_count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blacklist_count());

    // required int32 served_count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->served_count());

    // required int32 blacklist_alarm_count = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blacklist_alarm_count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TodayFaceCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.TodayFaceCount)
  GOOGLE_DCHECK_NE(&from, this);
  const TodayFaceCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TodayFaceCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.TodayFaceCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.TodayFaceCount)
    MergeFrom(*source);
  }
}

void TodayFaceCount::MergeFrom(const TodayFaceCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.TodayFaceCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      snap_count_ = from.snap_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      blacklist_count_ = from.blacklist_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      served_count_ = from.served_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      blacklist_alarm_count_ = from.blacklist_alarm_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TodayFaceCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.TodayFaceCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TodayFaceCount::CopyFrom(const TodayFaceCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.TodayFaceCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TodayFaceCount::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void TodayFaceCount::Swap(TodayFaceCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TodayFaceCount::InternalSwap(TodayFaceCount* other) {
  using std::swap;
  swap(snap_count_, other->snap_count_);
  swap(blacklist_count_, other->blacklist_count_);
  swap(served_count_, other->served_count_);
  swap(blacklist_alarm_count_, other->blacklist_alarm_count_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TodayFaceCount::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapAreaGiagram::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapAreaGiagram::kSnapCountPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapAreaGiagram::SnapAreaGiagram()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_SnapAreaGiagram.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.SnapAreaGiagram)
}
SnapAreaGiagram::SnapAreaGiagram(const SnapAreaGiagram& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      snap_count_point_(from.snap_count_point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:kf.SnapAreaGiagram)
}

void SnapAreaGiagram::SharedCtor() {
}

SnapAreaGiagram::~SnapAreaGiagram() {
  // @@protoc_insertion_point(destructor:kf.SnapAreaGiagram)
  SharedDtor();
}

void SnapAreaGiagram::SharedDtor() {
}

void SnapAreaGiagram::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SnapAreaGiagram::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapAreaGiagram& SnapAreaGiagram::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_SnapAreaGiagram.base);
  return *internal_default_instance();
}


void SnapAreaGiagram::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.SnapAreaGiagram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  snap_count_point_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SnapAreaGiagram::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.SnapAreaGiagram)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 snap_count_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_snap_count_point())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_snap_count_point())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.SnapAreaGiagram)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.SnapAreaGiagram)
  return false;
#undef DO_
}

void SnapAreaGiagram::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.SnapAreaGiagram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 snap_count_point = 1;
  for (int i = 0, n = this->snap_count_point_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->snap_count_point(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.SnapAreaGiagram)
}

::google::protobuf::uint8* SnapAreaGiagram::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.SnapAreaGiagram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 snap_count_point = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->snap_count_point_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.SnapAreaGiagram)
  return target;
}

size_t SnapAreaGiagram::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.SnapAreaGiagram)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 snap_count_point = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->snap_count_point_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->snap_count_point_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SnapAreaGiagram::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.SnapAreaGiagram)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapAreaGiagram* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapAreaGiagram>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.SnapAreaGiagram)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.SnapAreaGiagram)
    MergeFrom(*source);
  }
}

void SnapAreaGiagram::MergeFrom(const SnapAreaGiagram& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.SnapAreaGiagram)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  snap_count_point_.MergeFrom(from.snap_count_point_);
}

void SnapAreaGiagram::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.SnapAreaGiagram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapAreaGiagram::CopyFrom(const SnapAreaGiagram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.SnapAreaGiagram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapAreaGiagram::IsInitialized() const {
  return true;
}

void SnapAreaGiagram::Swap(SnapAreaGiagram* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapAreaGiagram::InternalSwap(SnapAreaGiagram* other) {
  using std::swap;
  snap_count_point_.InternalSwap(&other->snap_count_point_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SnapAreaGiagram::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tree::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tree::kStatusFieldNumber;
const int Tree::kOidFieldNumber;
const int Tree::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tree::Tree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_face_2eproto::scc_info_Tree.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kf.Tree)
}
Tree::Tree(const Tree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_oid()) {
    oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:kf.Tree)
}

void Tree::SharedCtor() {
  oid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

Tree::~Tree() {
  // @@protoc_insertion_point(destructor:kf.Tree)
  SharedDtor();
}

void Tree::SharedDtor() {
  oid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Tree::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Tree::descriptor() {
  ::protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tree& Tree::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_face_2eproto::scc_info_Tree.base);
  return *internal_default_instance();
}


void Tree::Clear() {
// @@protoc_insertion_point(message_clear_start:kf.Tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      oid_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      msg_.ClearNonDefaultToEmptyNoArena();
    }
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Tree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kf.Tree)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string oid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oid().data(), static_cast<int>(this->oid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.Tree.oid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "kf.Tree.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kf.Tree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kf.Tree)
  return false;
#undef DO_
}

void Tree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kf.Tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  // required string oid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.Tree.oid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->oid(), output);
  }

  // required string msg = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.Tree.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kf.Tree)
}

::google::protobuf::uint8* Tree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kf.Tree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 status = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  // required string oid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oid().data(), static_cast<int>(this->oid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.Tree.oid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->oid(), target);
  }

  // required string msg = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "kf.Tree.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kf.Tree)
  return target;
}

size_t Tree::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:kf.Tree)
  size_t total_size = 0;

  if (has_oid()) {
    // required string oid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());
  }

  if (has_msg()) {
    // required string msg = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  if (has_status()) {
    // required int32 status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  return total_size;
}
size_t Tree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kf.Tree)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string oid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oid());

    // required string msg = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());

    // required int32 status = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kf.Tree)
  GOOGLE_DCHECK_NE(&from, this);
  const Tree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kf.Tree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kf.Tree)
    MergeFrom(*source);
  }
}

void Tree::MergeFrom(const Tree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kf.Tree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_oid();
      oid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Tree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kf.Tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tree::CopyFrom(const Tree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kf.Tree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tree::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Tree::Swap(Tree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tree::InternalSwap(Tree* other) {
  using std::swap;
  oid_.Swap(&other->oid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  msg_.Swap(&other->msg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tree::GetMetadata() const {
  protobuf_face_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_face_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace kf
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::Box* Arena::CreateMaybeMessage< ::kf::Box >(Arena* arena) {
  return Arena::CreateInternal< ::kf::Box >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::PersonBoxs* Arena::CreateMaybeMessage< ::kf::PersonBoxs >(Arena* arena) {
  return Arena::CreateInternal< ::kf::PersonBoxs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::FaceInfoPT* Arena::CreateMaybeMessage< ::kf::FaceInfoPT >(Arena* arena) {
  return Arena::CreateInternal< ::kf::FaceInfoPT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::FaceStatis* Arena::CreateMaybeMessage< ::kf::FaceStatis >(Arena* arena) {
  return Arena::CreateInternal< ::kf::FaceStatis >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::TrackedFace* Arena::CreateMaybeMessage< ::kf::TrackedFace >(Arena* arena) {
  return Arena::CreateInternal< ::kf::TrackedFace >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::BlackListFaceAlarm* Arena::CreateMaybeMessage< ::kf::BlackListFaceAlarm >(Arena* arena) {
  return Arena::CreateInternal< ::kf::BlackListFaceAlarm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::Intruder* Arena::CreateMaybeMessage< ::kf::Intruder >(Arena* arena) {
  return Arena::CreateInternal< ::kf::Intruder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::ABDoorAlarm* Arena::CreateMaybeMessage< ::kf::ABDoorAlarm >(Arena* arena) {
  return Arena::CreateInternal< ::kf::ABDoorAlarm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::StopAlarm* Arena::CreateMaybeMessage< ::kf::StopAlarm >(Arena* arena) {
  return Arena::CreateInternal< ::kf::StopAlarm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::ClimbAlarm* Arena::CreateMaybeMessage< ::kf::ClimbAlarm >(Arena* arena) {
  return Arena::CreateInternal< ::kf::ClimbAlarm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::LingerAlarm* Arena::CreateMaybeMessage< ::kf::LingerAlarm >(Arena* arena) {
  return Arena::CreateInternal< ::kf::LingerAlarm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::GatherAlarm* Arena::CreateMaybeMessage< ::kf::GatherAlarm >(Arena* arena) {
  return Arena::CreateInternal< ::kf::GatherAlarm >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::TodayTotalEventCount* Arena::CreateMaybeMessage< ::kf::TodayTotalEventCount >(Arena* arena) {
  return Arena::CreateInternal< ::kf::TodayTotalEventCount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::OneDayEventCount* Arena::CreateMaybeMessage< ::kf::OneDayEventCount >(Arena* arena) {
  return Arena::CreateInternal< ::kf::OneDayEventCount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::EventSpiderGiagram* Arena::CreateMaybeMessage< ::kf::EventSpiderGiagram >(Arena* arena) {
  return Arena::CreateInternal< ::kf::EventSpiderGiagram >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::TodayAlarmEventCount* Arena::CreateMaybeMessage< ::kf::TodayAlarmEventCount >(Arena* arena) {
  return Arena::CreateInternal< ::kf::TodayAlarmEventCount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::PieCharData* Arena::CreateMaybeMessage< ::kf::PieCharData >(Arena* arena) {
  return Arena::CreateInternal< ::kf::PieCharData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::PieChart* Arena::CreateMaybeMessage< ::kf::PieChart >(Arena* arena) {
  return Arena::CreateInternal< ::kf::PieChart >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::TodayFaceCount* Arena::CreateMaybeMessage< ::kf::TodayFaceCount >(Arena* arena) {
  return Arena::CreateInternal< ::kf::TodayFaceCount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::SnapAreaGiagram* Arena::CreateMaybeMessage< ::kf::SnapAreaGiagram >(Arena* arena) {
  return Arena::CreateInternal< ::kf::SnapAreaGiagram >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kf::Tree* Arena::CreateMaybeMessage< ::kf::Tree >(Arena* arena) {
  return Arena::CreateInternal< ::kf::Tree >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
